name: CI
on:
  push:
    paths-ignore:
      - '**.md'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Cache pip
      id: pip-cache
      uses: actions/cache@v1
      with:
        python-version: 3.8
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-test.txt') }}-3.8
    - name: Install dependencies
      if: steps.pip-cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    - name: Lint
      run: |
        pylint flashback/ tests/

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get cache location
      id: pip-cache-location
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"
    - name: Cache pip
      id: pip-cache
      uses: actions/cache@v1
      with:
        python-version: ${{ matrix.python-version }}
        path: ${{ steps.pip-cache-location.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-test.txt') }}-${{ matrix.python-version }}
    - name: Install dependencies
      if: steps.pip-cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    - name: Test
      run: |
        pytest tests/ -v --cov
